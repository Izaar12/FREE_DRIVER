import pyxel
import random

LARGEUR = 400
HAUTEUR = 600
COULEUR_FOND = 13

score = -25

multi = 0

var_affichage = 0

var = -1

liste_coo_1 = []
liste_coo_2 = []


remorque = [
    [[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1]],
    [[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1]],
    [[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1]],
    [[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1]],
    [[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],   
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0]],
    [[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1]],
    [[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1]],
    [[-1],[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[-1],[-1],[-1]],
    [[-1],[0],[0],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[-1]],
    [[-1],[0],[0],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[-1]],
    [[-1],[0],[0],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[-1]],
    [[-1],[0],[0],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[-1]],
    [[-1],[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[0],[0],[-1]],
    [[-1],[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[-1],[-1],[-1]],
    [[-1],[-1],[-1],[1],[1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[-1],[-1],[-1]],
    [[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1]],
    [[-1],[-1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1]],
]
bus =  [
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[10],[10]],
    [[-1],[-1],[10],[10],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[10],[10]],
    [[-1],[-1],[10],[10],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[-1],[-1],[10],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],    
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10]],
    [[-1],[-1],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[0],[0],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[0],[0]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],  
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[0],[0],[0],[0],[0],[0],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[10],[10],[10],[10],[10],[0],[0],[0],[0],[0],[0],[10],[10],[10],[10],[10],[10],[10]],
    [[-1],[-1],[10],[10],[8],[8],[8],[10],[10],[0],[0],[0],[0],[0],[0],[10],[10],[8],[8],[8],[10],[10]],
    [[-1],[-1],[10],[10],[8],[8],[8],[10],[10],[0],[0],[0],[0],[0],[0],[10],[10],[8],[8],[8],[10],[10]],
] 
camion = [
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[-1],[-1],[0],[0],[1],[7],[7],[7],[7],[7],[1],[1],[7],[7],[7],[7],[7],[1],[0],[0]],
    [[-1],[-1],[0],[0],[1],[7],[7],[7],[7],[7],[1],[1],[7],[7],[7],[7],[7],[1],[0],[0]],
    [[-1],[-1],[0],[0],[1],[7],[7],[7],[7],[7],[1],[1],[7],[7],[7],[7],[7],[1],[0],[0]],
    [[-1],[-1],[0],[0],[1],[7],[7],[7],[7],[7],[1],[1],[7],[7],[7],[7],[7],[1],[0],[0]],
    [[-1],[-1],[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[0],[0],[0],[0]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    [[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9],[10],[10],[9],[9]],
    
    
    ]
circuit1 = [
    [[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[13],[13],[13],[13],[13],[7],[7],[7]],
]    
circuit2 = [
    [[7],[7],[7],[13],[13],[13],[13],[13],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11]],
    ]
voiture_bot = [
        [[-1],[-1],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[0] ,[0],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0],[15],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[0],[0],[-1]],
        [[0] ,[0],[15],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[0],[0],[-1]],
        [[0] ,[0],[15],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[0],[0],[-1]],
        [[-1],[-1],[15],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[0] ,[0] ,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0] ,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0] ,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0] ,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0] ,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[0] ,[0] ,[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[0],[0],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
        [[-1],[-1],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[-1],[-1],[-1]],
    ]
voiture = [
        [[-1],[-1],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[0] ,[0],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0],[8],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[0],[0],[-1]],
        [[0] ,[0],[8],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[0],[0],[-1]],
        [[0] ,[0],[8],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[0],[0],[-1]],
        [[-1],[-1],[8],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[0] ,[0] ,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0] ,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0] ,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0] ,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0] ,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[0] ,[0] ,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[0],[0],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
        [[-1],[-1],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[-1],[-1],[-1]],
    ]
voiture2 = [
        [[-1],[-1],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[0] ,[0],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0],[5],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[0],[0],[-1]],
        [[0] ,[0],[5],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[0],[0],[-1]],
        [[0] ,[0],[5],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[0],[0],[-1]],
        [[-1],[-1],[5],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[0] ,[0] ,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0] ,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0] ,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0] ,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0] ,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[0] ,[0] ,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[0],[0],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
        [[-1],[-1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[-1],[-1],[-1]],
    ]
voie = [

    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
    [[7],[7],[7]],
]
panneau = [
    [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[0],[8],[8],[8],[8],[8],[8],[8],[8],[0]],
    [[0],[8],[7],[7],[7],[7],[7],[7],[8],[0]],
    [[0],[8],[7],[7],[7],[7],[7],[7],[8],[0]],
    [[0],[8],[7],[7],[7],[7],[7],[7],[8],[0]],
    [[0],[8],[7],[7],[7],[7],[7],[7],[8],[0]],
    [[0],[8],[7],[7],[7],[7],[7],[7],[8],[0]],
    [[0],[8],[7],[7],[7],[7],[7],[7],[8],[0]],
    [[0],[8],[8],[8],[8],[8],[8],[8],[8],[0]],
    [[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
    [[-1],[-1],[-1],[-1],[9],[9]],
    [[-1],[-1],[-1],[-1],[9],[9]],
    [[-1],[-1],[-1],[-1],[9],[9]],
    [[-1],[-1],[-1],[-1],[9],[9]],
    [[-1],[-1],[-1],[-1],[9],[9]],
    [[-1],[-1],[-1],[-1],[9],[9]],
    [[-1],[-1],[-1],[-1],[9],[9]],
] 


DEGATS = 0
DEGATS2 = 0

position_panneau = [50,-1000  ,  340,-1000]
    
position_voie = [116,0  ,  172,0  ,  228,0  ,  284,0    ,      116,60  ,  172,60  ,  228,60  ,  284,60      ,     116,120  ,  172,120  ,  228,120  ,  284,120    ,    116,180  ,  172,180  ,  228,180  ,  284,180    ,      116,240  ,  172,240  ,  228,240  ,  284,240    ,      116,300  ,  172,300  ,  228,300  ,  284,300    ,      116,360  ,  172,360  ,  228,360  ,  284,360    ,      116,420  ,  172,420  ,  228,420  ,  284,420    ,      116,480  ,  172,480  ,  228,480  ,  284,480    ,      116,540  ,  172,540  ,  228,540  ,  284,540     ,      116,600  ,  172,600  ,  228,600  ,  284,600]

position_voiture = [246 , 550]

position_voiture2 = [134 , 550]

vitesse_voiture_GetD = 3
vitesse_voiture_HetB = 2

var = 1

temps = 150

for i in range(600) :
    liste_coo_1.append([0,i])
    liste_coo_2.append([340,i])    


liste_bot_actifs1 = []
liste_bot_actifs2 = []


def new_position1():
    position_bot2 = random.choice([[190,-60]  ,  [246,-60]  ,  [302,-60]])
    return position_bot2

def new_position2():
    position_bot1 = random.choice([[78,-60]  ,  [134,-60]])
    return position_bot1

def new_bot2():
    bot1 = random.choice([remorque , remorque , bus , camion , voiture_bot , voiture_bot , voiture_bot])
    return bot1

def new_bot1():
    bot2 = random.choice([remorque , bus , camion , voiture_bot , voiture_bot])
    return bot2
    





def update():
    global position_voiture, position_voie , var , DEGATS , DEGATS2 , position_voiture2 , multi



    if pyxel.btn(pyxel.KEY_LEFT) and position_voiture[0] >= 65:
        position_voiture[0] = position_voiture[0] - vitesse_voiture_GetD
    
    if pyxel.btn(pyxel.KEY_RIGHT) and position_voiture[0] <= 315:
        position_voiture[0] = position_voiture[0] + vitesse_voiture_GetD
    
    if pyxel.btn(pyxel.KEY_UP) and position_voiture[1] >= 15:
        position_voiture[1] = position_voiture[1] - vitesse_voiture_HetB
    
    if pyxel.btn(pyxel.KEY_DOWN) and position_voiture[1] <= 550:
        position_voiture[1] = position_voiture[1] + vitesse_voiture_HetB

    
    
    
    if pyxel.btn(pyxel.KEY_Q) and position_voiture2[0] >= 65:
        position_voiture2[0] = position_voiture2[0] - vitesse_voiture_GetD
    
    if pyxel.btn(pyxel.KEY_D) and position_voiture2[0] <= 315:
        position_voiture2[0] = position_voiture2[0] + vitesse_voiture_GetD
    
    if pyxel.btn(pyxel.KEY_Z) and position_voiture2[1] >= 15:
        position_voiture2[1] = position_voiture2[1] - vitesse_voiture_HetB
    
    if pyxel.btn(pyxel.KEY_S) and position_voiture2[1] <= 550:
        position_voiture2[1] = position_voiture2[1] + vitesse_voiture_HetB        

    

    if score < 30:
        temps = 80
        vitesse = 2
    if score <= 50 and score >= 30:
        temps = 60
        vitesse = 3
    if score <= 70 and score >= 50:
        vitesse = 4
        temps = 40
    if score >= 70 and score <= 90:
        temps = 30
        vitesse = 5
    if score >= 90:
        vitesse = 6             
        temps = 20


    for i in range(2):
        position_panneau[1 + i * 2] = position_panneau[1 + i * 2] + vitesse + 1
        if position_panneau[1 + i * 2] >= 600:
            position_panneau[1 + i * 2] = -1000



    for i in range(len(position_voie) // 2):    
        position_voie[1 + i * 2] = position_voie[1 + i * 2] + vitesse + 1

    for i in range(1, len(position_voie), 2):
        if position_voie[i] >= 632:
            position_voie[i] = -28


    if pyxel.frame_count % temps == 0 and score >= 1:
        liste_bot_actifs1.append([new_position1() , new_bot1()])

    if pyxel.frame_count % temps == 0 and score >= 1:
        liste_bot_actifs2.append([new_position2() , new_bot2()])

    for bot1 in liste_bot_actifs1:
        if bot1[0][1] > 600:
            liste_bot_actifs1.remove(bot1)
    
    for bot1 in liste_bot_actifs2:
        if bot1[0][1] > 600:
            liste_bot_actifs2.remove(bot1)

    for bot1 in liste_bot_actifs1:
        bot1[0][1] += vitesse

    for bot1 in liste_bot_actifs2:
        bot1[0][1] += vitesse    



    for bot1 in liste_bot_actifs1:
        if bot1[1] == voiture_bot:
            if position_voiture[0] < bot1[0][0] + 18:
                if position_voiture[0] + 18 > bot1[0][0]: 
                    if position_voiture[1] < bot1[0][1] + 29: 
                        if position_voiture[1] + 29 > bot1[0][1]:
                            DEGATS = DEGATS + 1           

        if bot1[1] == camion:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 56: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1            

        if bot1[1] == bus:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 74: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1            

        if bot1[1] == remorque:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 52: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1               


    
    
    for bot1 in liste_bot_actifs2:
        if bot1[1] == voiture_bot:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 29: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1           

        if bot1[1] == camion:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 56: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1            

        if bot1[1] == bus:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 74: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1            

        if bot1[1] == remorque:
            if position_voiture[0] < bot1[0][0] + 18:
                
                if position_voiture[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture[1] < bot1[0][1] + 52: 
                        
                        if position_voiture[1] + 29 > bot1[0][1]:
                            
                            DEGATS = DEGATS + 1          





    for bot1 in liste_bot_actifs1:
        if bot1[1] == voiture_bot:
            if position_voiture2[0] < bot1[0][0] + 18:
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    if position_voiture2[1] < bot1[0][1] + 29: 
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            DEGATS2 = DEGATS2 + 1           

        if bot1[1] == camion:
            if position_voiture2[0] < bot1[0][0] + 18:
                
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture2[1] < bot1[0][1] + 56:
                        
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            
                            DEGATS2 = DEGATS2 + 1            

        if bot1[1] == bus:
            if position_voiture2[0] < bot1[0][0] + 18:
                
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture2[1] < bot1[0][1] + 74: 
                        
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            
                            DEGATS2 = DEGATS2 + 1            

        if bot1[1] == remorque:
            if position_voiture2[0] < bot1[0][0] + 18:
                
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture2[1] < bot1[0][1] + 52: 
                        
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            
                            DEGATS2 = DEGATS2 + 1               

    for bot1 in liste_bot_actifs2:
        if bot1[1] == voiture_bot:
            if position_voiture2[0] < bot1[0][0] + 18:
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    if position_voiture2[1] < bot1[0][1] + 29: 
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            DEGATS2 = DEGATS2 + 1           

        if bot1[1] == camion:
            if position_voiture2[0] < bot1[0][0] + 18:
                
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture2[1] < bot1[0][1] + 56: 
                        
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            
                            DEGATS2 = DEGATS2 + 1            

        if bot1[1] == bus:
            if position_voiture2[0] < bot1[0][0] + 18:
                
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture2[1] < bot1[0][1] + 74: 
                        
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            
                            DEGATS2 = DEGATS2 + 1            

        if bot1[1] == remorque:
            if position_voiture2[0] < bot1[0][0] + 18:
                
                if position_voiture2[0] + 18 > bot1[0][0]: 
                    
                    if position_voiture2[1] < bot1[0][1] + 52: 
                        
                        if position_voiture2[1] + 29 > bot1[0][1]:
                            
                            DEGATS2 = DEGATS2 + 1               




def draw():
    global score , liste_bot_actifs1 ,liste_bot_actifs2 , var , DEGATS , DEGATS2 ,  var_affichage , position_voiture , position_voiture2 , multi 
    pyxel.cls(COULEUR_FOND)

    
    for x, truc1 in enumerate(voie) :
        for y, truc2 in enumerate(truc1) :
            for pixel in truc2 :
                if not pixel == -1 :
                    for i in range (44):
                        pyxel.pset(position_voie[ i * 2 ] + y, position_voie[ i * 2 + 1 ] + x, pixel)                    

    if multi == 1:            
        if DEGATS2 <= 30:                                
            for x, truc1 in enumerate(voiture2) :
                for y, truc2 in enumerate(truc1) :
                    for pixel in truc2 :
                        if not pixel == -1 :
                            pyxel.pset(position_voiture2[0] + y, position_voiture2[1] + x, pixel)
    
    if DEGATS <= 30:
        for x, truc1 in enumerate(voiture) :
            for y, truc2 in enumerate(truc1) :
                for pixel in truc2 :
                    if not pixel == -1 :
                        pyxel.pset(position_voiture[0] + y, position_voiture[1] + x, pixel)

    
    for coo in liste_coo_1 :
        for x, truc1 in enumerate(circuit1) :
            for y, truc2 in enumerate(truc1) :
                for pixel in truc2 :
                    if not pixel == -1 :
                        pyxel.pset(coo[0] + y, coo[1] + x, pixel)

    
    for coo in liste_coo_2 :
        for x, truc1 in enumerate(circuit2) :
            for y, truc2 in enumerate(truc1) :
                for pixel in truc2 :
                    if not pixel == -1 :
                        pyxel.pset(coo[0] + y, coo[1] + x, pixel)


    for pos in liste_bot_actifs1:
        for x, truc1 in enumerate(pos[1]) :
            for y, truc2 in enumerate(truc1) :
                for pixel in truc2 :
                    if len(liste_bot_actifs1) > 0 and score >= 1:
                        if not pixel == -1 :
                            pyxel.pset(pos[0][0] + y, pos[0][1] + x, pixel)    


    for pos in liste_bot_actifs2:
        for x, truc1 in enumerate(pos[1]) :
            for y, truc2 in enumerate(truc1) :
                for pixel in truc2 :
                    if len(liste_bot_actifs2) > 0 and score >= 1:
                        if not pixel == -1 :
                            pyxel.pset(pos[0][0] + y, pos[0][1] + x, pixel)    



    for x, truc1 in enumerate(panneau) :
        for y, truc2 in enumerate(truc1) :
            for pixel in truc2 :
                if not pixel == -1 :
                    for i in range (2):
                        pyxel.pset(position_panneau[ i * 2 ] + y, position_panneau[ i * 2 + 1 ] + x, pixel)                                                     
    

    variable_timer = 40
    variable_timer2 = 1

    pyxel.text(10 , 300 , "SCORE :" , 0)
    str(score)

    if pyxel.frame_count % variable_timer == 0 :
        variable_timer = variable_timer * variable_timer2
        variable_timer2 = variable_timer2 + 1 
        score = score + 1
        var = var + 1
        
    for i in range(499):
        if score > score - 1:
            pyxel.text(40 , 300 , str(score) , 0)    

    if multi == 1:
        if DEGATS2 <= 30:
            pyxel.text(40 , 250 , str(DEGATS2) , 0)    
            pyxel.text(10 , 250 , "DEGATS:" , 0)

    if DEGATS <= 30:
        pyxel.text(385 , 250 , str(DEGATS) , 0)    
        pyxel.text(355 , 250 , "DEGATS:" , 0)


    if multi == 1:
        if DEGATS >= 30 and DEGATS2 >= 30:
            pyxel.cls(7)
            pyxel.text(190 , 300 , "GAME OVER" , 0)
    else:
        if DEGATS >= 30:    
            pyxel.cls(7)
            pyxel.text(190 , 300 , "GAME OVER" , 0)
    

    if score >= 150:
        pyxel.cls(7)       
        pyxel.text(190, 300, "BRAVO !!", 0)
        pyxel.text(120, 310, "VOUS AVEZ PU ATTEINDRE LE SCORE ADMIRABLE DE 150", 0)

    if score < var_affichage:    
        pyxel.cls(7)
        pyxel.text(30 , 200 , "BIENVENUE DANS UN JEU DE COURSE FANTASTIQUE. VOTRE BUT EST D'ATTEINDRE UN SCORE DE 150" , 0)
        pyxel.text(30 , 220 , "EN ALLANT LE PLUS LOIN POSSIBLE. UNE CHOSE EST A SAVOIR: SI VOUS ENTREZ EN CONTACT DIRECT" , 0)
        pyxel.text(20 , 240 , "AVEC LES AUTRES AUTOMOBILISTES, VOUS CUMULEZ DES DEGATS, SI JAMAIS CES DEGATS ATTEIGNENT 30:" , 0)
        pyxel.text(130 , 260 , "C'EST LE GAME OVER ; BONNE CHANCE" , 0)
        pyxel.text(130 , 300 , "APPUYER SUR <T> POUR AJOUTER UN JOUEUR" , 0)
        pyxel.text(130 , 320 , "APPUYER SUR <ESPACE> POUR COMMENCER" , 0)

    if pyxel.btn(pyxel.KEY_T):
        multi = 1

    if pyxel.btn(pyxel.KEY_SPACE):
        var_affichage = -7
        score = 0

    

                    
pyxel.init(LARGEUR, HAUTEUR, fps = 60 , title = 'FREE_DRIVER') 
pyxel.run(update, draw)